import { UseQueryOptions, useQuery } from "@tanstack/react-query";
import axios from "@/libs/axios";
import { useAppContext } from "@/contexts/AppContext/AppContext";

const ENDPOINT = "/backoffice/conversations/sessions";

interface User {
  userid: string;
  customer_name: string;
  email: string;
  mobilephone: string;
  pin: string;
  device: string;
  device_id: string;
  session_id: string;
  session_expiration: string;
  watchlist: null;
  is_active: boolean;
  CreatedBy: string;
  CreatedAt: string;
  ModifiedBy: string;
  ModifiedAt: string;
}

// Generated by https://quicktype.io
export interface ConversationSession {
  session_id: string;
  user: User;
  operator_id: null;
  messages: null;
}

export type ConversationsSessionsResponse = {
  data: ConversationSession[];
};

type Options = Partial<
  UseQueryOptions<ConversationsSessionsResponse, Error>
> & {
  backOfficeUserId?: string;
};

// https://arctfrex.apidog.io/api-10313428
export const useConversationsSessions = (options?: Options) => {
  const backOfficeUserId = options?.backOfficeUserId;

  return useQuery({
    ...options,
    queryKey: [
      "conversations-sessions",
      { backoffice_user_id: backOfficeUserId },
    ],
    queryFn: async () => {
      const { data } = await axios.get<ConversationsSessionsResponse>(
        ENDPOINT,
        { params: { backoffice_user_id: backOfficeUserId } }
      );

      return data;
    },
  });
};
