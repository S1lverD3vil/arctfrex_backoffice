import {
  UseMutationOptions,
  UseQueryOptions,
  useMutation,
  useQuery,
} from "@tanstack/react-query";
import axios from "@/libs/axios";

const ENDPOINT = "/backoffice/customers/users/employment";

// Generated by https://quicktype.io
export interface CustomersUsersEmploymentResponse {
  message: string;
  data: Employment;
  time: string;
}

export interface Employment {
  user_id: string;
  company_name: string;
  company_address: string;
  company_city: string;
  company_phone: string;
  company_postal_code: string;
  working_since: Date;
  profession: string;
  working_field: string;
  preview_job_title: string;
  job_title: string;
}

type Options = Partial<
  UseQueryOptions<CustomersUsersEmploymentResponse, Error>
> & {
  userId?: string;
};

// https://arctfrex.apidog.io/api-10313430
export const useCustomersUsersEmployment = ({
  userId,
  ...options
}: Options) => {
  return useQuery({
    ...options,
    queryKey: ["customers-users-employment", userId],
    queryFn: async () => {
      const { data } = await axios.get<CustomersUsersEmploymentResponse>(
        ENDPOINT + "/" + userId
      );

      return data;
    },
  });
};

export const useCustomersUsersEmploymentMutation = ({
  userId,
  ...options
}: UseMutationOptions<any, Error, any> & { userId: string }) => {
  return useMutation({
    mutationFn: async (payload) => {
      const { data } = await axios.post<any>(ENDPOINT + "/" + userId, payload);

      return data;
    },
    ...options,
  });
};
