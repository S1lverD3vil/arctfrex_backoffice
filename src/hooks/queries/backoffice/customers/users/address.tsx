import {
  UseMutationOptions,
  UseQueryOptions,
  useMutation,
  useQuery,
} from "@tanstack/react-query";
import axios from "@/libs/axios";

const ENDPOINT = "/backoffice/customers/users/address";

// Generated by https://quicktype.io

export interface Address {
  userid: string;
  ktp_country: string;
  ktp_province: string;
  ktp_city: string;
  ktp_district: string;
  ktp_subdistrict: string;
  ktp_address: string;
  ktp_same_dom: boolean;
  dom_country: string;
  dom_province: string;
  dom_city: string;
  dom_district: string;
  dom_subdistrict: string;
  dom_address: string;
  residence_ownership: string;
  is_active: boolean;
  CreatedBy: string;
  CreatedAt: string;
  ModifiedBy: string;
  ModifiedAt: string;
}

export type CustomersUsersAddressResponse = Address;

type Options = Partial<
  UseQueryOptions<CustomersUsersAddressResponse, Error>
> & {
  userId?: string;
};

// https://arctfrex.apidog.io/api-10313429
export const useCustomersUsersAddress = ({ userId, ...options }: Options) => {
  return useQuery({
    ...options,
    queryKey: ["customers-users-address", userId],
    queryFn: async () => {
      const { data } = await axios.get<CustomersUsersAddressResponse>(
        ENDPOINT + "/" + userId
      );

      return data;
    },
  });
};

export const useCustomersUsersAddressMutation = ({
  userId,
  ...options
}: UseMutationOptions<any, Error, any> & { userId: string }) => {
  return useMutation({
    mutationFn: async (payload) => {
      const { data } = await axios.post<any>(ENDPOINT + "/" + userId, payload);

      return data;
    },
    ...options,
  });
};
